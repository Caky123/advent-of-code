name: Check Python Scripts Outputs
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check-scripts-output:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      # Run all Python scripts and append output to a single file
      - name: Run all Python scripts
        run: |
          # Clear previous output file if it exists
          > output.txt

          # Run each script and append its output to the same file
          python 01_1.py + "\n" >> output.txt
          # echo "" >> output.txt  # Add a newline for separation

          python 01_2.py + "\n" >> output.txt
          # echo "" >> output.txt  # Add a newline for separation

          python 02_1_2.py + "\n" >> output.txt
          # echo "" >> output.txt  # Add a newline for separation

          python 03_1.py + "\n" >> output.txt
          # echo "" >> output.txt  # Add a newline for separation
          python 03_2.py + "\n" >> output.txt
          python 04_1_2.py + "\n" >> output.txt

      # Validate output for each script based on specific lines
      - name: Validate output for all scripts
        run: |
          # Read each specific line from the output file
          line1=$(sed -n '1p' output.txt)
          line2=$(sed -n '2p' output.txt)
          line3=$(sed -n '3p' output.txt)
          line4=$(sed -n '4p' output.txt)
          line5=$(sed -n '5p' output.txt)
          line6=$(sed -n '6p' output.txt)
          line7=$(sed -n '7p' output.txt)
          line8=$(sed -n '8p' output.txt)

          # Expected outputs
          expected_output1_1="Result is <232>"
          expected_output1_2="Result is <1783>"
          expected_output2_1="Result (square feet of wrapping paper) is <1598415>"
          expected_output2_2="Result (feet of ribbon) is <3812909>"
          expected_output3_1="INFO - Result is <2592>"
          expected_output3_2="INFO - Result is <2360>"
          expected_output4_1=INFO - Result is <117946>
          expected_output4_2=INFO - Result is <3938038>

          # Validate each output line
          if [[ "$line1" == "$expected_output1_1" ]]; then
            echo "01_1.py output matches expected value."
          else
            echo "01_1.py output does not match expected value."
            exit 1
          fi

          if [[ "$line2" == "$expected_output1_2" ]]; then
            echo "01_2.py output matches expected value."
          else
            echo "01_2.py output does not match expected value."
            echo "$line2 != $expected_output2"
            exit 1
          fi

          if [[ "$line3" == "$expected_output2_1" ]]; then
            echo "02_1_2.py 2.1 - output matches expected value."
          else
            echo "02_1_2.py 2.1 - output does not match expected value."
            exit 1
          fi

          if [[ "$line4" == "$expected_output2_2" ]]; then
            echo "02_1_2.py 2.2 - output matches expected value."
          else
            echo "02_1_2.py 2.2 - output does not match expected value."
            echo "$line4 != $expected_output3_2"
            exit 1
          fi

          if [[ "$line5" == "$expected_output3_1" ]]; then
            echo "03_1.py 3.1 - output matches expected value."
          else
            echo "03_1.py 3.1 - output does not match expected value."
            echo "$line5 != $expected_output3_1"
            exit 1
          fi

          if [[ "$line6" == "$expected_output3_2" ]]; then
            echo "03_2.py 3.2 - output matches expected value."
          else
            echo "03_2.py 3.2 - output does not match expected value."
            echo "$line6 != $expected_output3_2"
            exit 1
          fi

          if [[ "$line7" == "$expected_output4_1" ]]; then
            echo "04_1.py 4.1 - output matches expected value."
          else
            echo "04_1.py 4.1 - output does not match expected value."
            echo "$line7 != $expected_output4_1"
            exit 1
          fi

          if [[ "$line8" == "$expected_output4_2" ]]; then
            echo "04_1.py 4.2 - output matches expected value."
          else
            echo "04_1.py 4.2 - output does not match expected value."
            echo "$line8 != $expected_output4_2"
            exit 1
          fi
